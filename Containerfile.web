##
## Builder
##

FROM --platform=$BUILDPLATFORM rustlang/rust:nightly-alpine AS builder

RUN apk add --no-cache \
    clang \
    openssl \
    pkgconfig \
    openssl-dev \
    openssl-libs-static \
    musl-dev \
    build-base \
    nodejs \
    npm

RUN mkdir -p /app
WORKDIR /app
COPY . .

RUN npm install
RUN npx @tailwindcss/cli -i ./crates/server/static/input.css -o style.css

RUN ARCH=$(uname -m) && \
  if [ "$ARCH" = "x86_64" ]; then \
    wget https://github.com/cargo-bins/cargo-binstall/releases/latest/download/cargo-binstall-x86_64-unknown-linux-musl.tgz && \
    tar -xvf cargo-binstall-x86_64-unknown-linux-musl.tgz; \
  elif [ "$ARCH" = "aarch64" ]; then \
    wget https://github.com/cargo-bins/cargo-binstall/releases/latest/download/cargo-binstall-aarch64-unknown-linux-musl.tgz && \
    tar -xvf cargo-binstall-aarch64-unknown-linux-musl.tgz; \
  else \
    echo "Unsupported architecture: $ARCH" && exit 1; \
  fi
RUN cp cargo-binstall /usr/local/cargo/bin

ENV RUSTUP_PERMIT_COPY_RENAME=true
RUN cargo binstall cargo-leptos -y
RUN rustup target add wasm32-unknown-unknown

ARG SQLX_OFFLINE=true
RUN cargo leptos build --release --precompress -vv

#
# Runtime
#

FROM alpine:latest AS runtime
WORKDIR /app

RUN apk add --no-cache openssl ca-certificates

COPY --from=builder /app/target/release/server /app/
COPY --from=builder /app/target/site /app/site

VOLUME ["/app/config"]

ENV RUST_LOG="info"
ENV LEPTOS_SITE_ADDR="0.0.0.0:3000"
ENV LEPTOS_SITE_ROOT="site"

EXPOSE 3000

CMD ["/app/server"]
